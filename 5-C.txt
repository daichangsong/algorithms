char* longestPalindrome(char* s) {
    
    static char str[1001];
    
    int n;
    static int dp[1000][1000];
    
    int max_len = 1;
    int start = 0;
    int i, j;
    
	n = strlen(s);
    memset(dp, 0, sizeof(dp));
    memset(str, '\0', sizeof(str));
    
    for(i=0; i<n; i++) {
        for(j=0; j<=i; j++) {
            if(i-j < 2) {
                dp[j][i] = (s[i]==s[j]);
            } else {
                dp[j][i] = (s[i]==s[j] && dp[j+1][i-1]);
            }
                
            if(dp[j][i] && max_len < (i-j+1)) {
                max_len = i-j+1;
                start = j;
            }
        }
    }
    
    for(i=start,j=0; i<start+max_len; i++,j++) {
        str[j] = s[i];
    }
    
    //printf("%s\n", str);
    return str;
    
}